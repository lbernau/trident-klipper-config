## The following is EXAMPLE configuration; it is intended to guide you in the
## configuration of the Euclid probe for YOUR printer.
##
## When incorporating this config into your own, make sure you address all
## comment markers starting with "@TODO".  Failure to do so could result in
## damage to your probe, your printer, or your pride.
##
##
## This example is for a fixed dock, fixed gantry/carriage and moving bed motion
## system like RailCore, Ender5, V-Core3, etc. Delta printes will be similar.
## Moving gantry printers like Voron need a few tweaks to ensure proper
## clearances and leveling procedures; some hints are provided inline below.
##
## Array variables implementation and macro setups credited to Brian Lalor,
## yolo-dubstep#8033 on Discord. See https://github.com/blalor/vcore3-ratos-config
## for updates and details.
##

## @TODO the following is a hardware probe config for the hardware configuration.
## it can appear in either the printer.cfg OR in the euclid.cfg, not both.
## see https://euclidprobe.github.io/05_klipper.html for more details.
##
##
# [probe]
# pin: ^PG15
# x_offset: -27.942
# y_offset: -16.75
# z_offset: 8.514
# speed: 5
# samples: 2
# samples_result: average
# sample_retract_dist: 5.0
# samples_tolerance: 0.05
# samples_tolerance_retries: 3
# lift_speed: 30

# Below is an example bed diagram to correlate with macros and movements below.
#  __________________________________________________________________________
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  | * Dock Exit Position                                                   |
#  |   X0,Y40                                                               |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |   X0,Y-4  X30,Y-4       X100,Y-4                                       |
#  | * Dock   * Dock Side  * Dock Preflight                                 |
#  |________________________________________________________________________|
#

[gcode_macro EuclidProbe]
description: config vars for Euclid probe deploy/stow

## @TODO Replace the coordinates to suit your printer
variable_position_preflight: [ 35, 300 ] # position for probe to have clear path to dock
variable_position_side:      [ 35, 320 ] # position for probe near dock to swipe on/off
variable_position_dock:      [ 35, 350 ] # dock position
## exit/re-entry staging
variable_position_exit:      [ 100, 350 ] # exit position

## clearance between the toolhead and bed when traveling to pick up the probe
variable_bed_clearance: 15

## probe dock height
## @TODO If the toolhead can move vertically in relation to the probe dock
## @TODO height(such as attached to the be on a moving-gantry printer like a
## @TODO Voron 2.4), set this to the Z position of the probe dock.
# variable_dock_height: 15

## move speeds in mm/min
variable_move_speeds: 18000

## internal state variables; not for configuration!
variable_batch_mode_enabled: False
variable_probe_state: None


gcode:
    RESPOND TYPE=command MSG="{ printer['gcode_macro EuclidProbe'] }"


# @TODO The homing override is machine specific.  This example is for a
# @TODO fixed-gantry/moving-bed printer such as the Rat Rig V-Core 3.  Ensure you
# @TODO only have [homing_override] defined in one place in your Klipper config
# @TODO (typically here or in printer.cfg).  It's particularly important to make
# @TODO sure the probe is picked up before attempting to home the Z axis.
[homing_override]
axes: z
set_position_z: -5
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    G90

    # force the bed and toolhead apart
    SET_KINEMATIC_POSITION Z=0
    G0 Z{ euclid_probe.bed_clearance } F500

    # home Y and X, Y first to avoid running into the dock
    {% if "y" not in (printer.toolhead.homed_axes | lower) %}
        G28 Y
    {% endif %}

    {% if "x" not in (printer.toolhead.homed_axes | lower) %}
        G28 X
    {% endif %}

    DEPLOY_PROBE

    # home Z at bed center
    #G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ euclid_probe.move_speeds }
    G0 X192.5 Y354 F{ euclid_probe.move_speeds }
    G28 Z

    # after 'G28 Z' the probe stays in contact with the bed; move it away.
    G0 Z5

    STOW_PROBE


[gcode_macro _ASSERT_PROBE_STATE]
description: ensures probe is in a known state; QUERY_PROBE must have been called before this macro!
gcode:
    ## QUERY_PROBE manually-verified results, when microswitch not depressed
    ## "TRIGGERED" -> 1 :: probe stowed
    ## "open"      -> 0 :: probe deployed
    {% set last_query_state = "stowed" if printer.probe.last_query == 1 else "deployed" %}

    {% if params.MUST_BE != last_query_state %}
        { action_raise_error("expected probe state to be {} but is {} ({})".format(params.MUST_BE, last_query_state, printer.probe.last_query)) }
    {% else %}
        ## all good; update state
        SET_GCODE_VARIABLE MACRO=EuclidProbe VARIABLE=probe_state VALUE="'{ last_query_state }'"
    {% endif %}


[gcode_macro ASSERT_PROBE_DEPLOYED]
description: error if probe not deployed
gcode:
    # wait for moves to finish, then pause 0.25s for detection
    M400
    G4 P250

    QUERY_PROBE
    _ASSERT_PROBE_STATE MUST_BE=deployed


[gcode_macro ASSERT_PROBE_STOWED]
description: error if probe not stowed
gcode:
    # wait for moves to finish, then pause 0.25s for detection
    M400
    G4 P250

    QUERY_PROBE
    _ASSERT_PROBE_STATE MUST_BE=stowed


[gcode_macro EUCLID_PROBE_BEGIN_BATCH]
description: begin euclid probe batch mode
gcode:
    SET_GCODE_VARIABLE MACRO=EuclidProbe VARIABLE=batch_mode_enabled VALUE=True
    RESPOND TYPE=command MSG="Probe batch mode enabled"


[gcode_macro EUCLID_PROBE_END_BATCH]
description: end euclid probe batch mode and stow probe
gcode:
    SET_GCODE_VARIABLE MACRO=EuclidProbe VARIABLE=batch_mode_enabled VALUE=False
    RESPOND TYPE=command MSG="Probe batch mode disabled"
    STOW_PROBE


[gcode_macro DEPLOY_PROBE]
description: deploy Euclid probe
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    {% if euclid_probe.batch_mode_enabled and euclid_probe.probe_state == "deployed" %}
        RESPOND TYPE=command MSG="Probe batch mode enabled: already deployed"
    {% else %}
        RESPOND TYPE=command MSG="Deploying probe"

        # ensure the probe is currently stowed; can't deploy what isn't stowed.
        ASSERT_PROBE_STOWED

        G90

        # set approach elevation to clear probe over bed on fixed gantry machine
        G0 Z{ euclid_probe.bed_clearance } F500

        # move the toolhead to safe position to start probe pickup
        G0 X{ euclid_probe.position_preflight[0] } Y{ euclid_probe.position_preflight[1] } F{ euclid_probe.move_speeds }

        #  move to the side of the dock
        G0 X{ euclid_probe.position_side[0] } Y{ euclid_probe.position_side[1] } F{ euclid_probe.move_speeds }

        # wait 1/4 second
        M400
        G4 P250

        #  move sideways over the dock to pick up probe
        G0 X{ euclid_probe.position_dock[0] } Y{ euclid_probe.position_dock[1] } F1500

        # confirm deploy was successful
        ASSERT_PROBE_DEPLOYED

        # move out of the dock in a straight line
        G0 X{ euclid_probe.position_exit[0] } Y{ euclid_probe.position_exit[1] } F{ euclid_probe.move_speeds }
    {% endif %}


[gcode_macro STOW_PROBE]
description: stow Euclid probe
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    {% if euclid_probe.batch_mode_enabled %}
        RESPOND TYPE=command MSG="Probe batch mode enabled: not stowing"
    {% else %}
        RESPOND TYPE=command MSG="Stowing probe"

        # ensure the probe is currently deployed; can't stow what isn't deployed.
        ASSERT_PROBE_DEPLOYED

        G90

        # set approach elevation for fixed gantry system to clear probe over bed
        G0 Z{ euclid_probe.bed_clearance } F3000

        # move to the exit/re-entry staging position
        G0 X{ euclid_probe.position_exit[0] } Y{ euclid_probe.position_exit[1] } F{ euclid_probe.move_speeds }

        # slowly move into dock
        G0 X{ euclid_probe.position_dock[0] } Y{ euclid_probe.position_dock[1] } F3000

        # wait for moves to finish, pause to force 90deg travel swipe
        M400
        G4 P250

        # quick swipe off
        G0 X{ euclid_probe.position_side[0] } Y{ euclid_probe.position_side[1] } F{ euclid_probe.move_speeds }

        # confirm stowing was successful
        ASSERT_PROBE_STOWED
    {% endif %}


## Simple example macro to perform a bed mesh calibration by wrapping it in
## DEPLOY_PROBE/STOW_PROBE macros.
## For a more complex example that probes the area that will be printed, see
## https://github.com/blalor/vcore3-ratos-config/blob/50e757ec32e085bedb3b9fa317581f9aa1913dd2/euclid.cfg#L230-L305
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
    DEPLOY_PROBE
    _BED_MESH_CALIBRATE
    STOW_PROBE


[gcode_macro Z_TILT_ADJUST]
description: modified Z_TILT_ADJUST, wrapped with DEPLOY_PROBE/STOW_PROBE
rename_existing: _Z_TILT_ADJUST
gcode:
    DEPLOY_PROBE
    _Z_TILT_ADJUST
    STOW_PROBE


[gcode_macro PROBE_CALIBRATE]
rename_existing: _PROBE_CALIBRATE
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}
    DEPLOY_PROBE

    G90
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ euclid_probe.move_speeds }

    M117 Beginning probe calibration; remove probe before measuring nozzle height!
    _PROBE_CALIBRATE